{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-axios-demo",
  "type": "registry:example",
  "title": "UseAxiosDemo",
  "description": "use-axios's hook in action.",
  "registryDependencies": [
    "card",
    "input",
    "button",
    "label",
    "alert",
    "lucide-react",
    "https://h3-use.com/r/use-axios.json"
  ],
  "files": [
    {
      "path": "registry/example/use-axios-demo.tsx",
      "content": "'use client';\n\nimport React, { useState } from 'react';\n\nimport { AlertCircle, CheckCircle2, Loader2 } from 'lucide-react';\n\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\n\nimport { useAxios } from '@/hooks/h3-use/use-axios';\n\nexport default function UseAxiosDemoComponent() {\n  const [url, setUrl] = useState(\n    'https://jsonplaceholder.typicode.com/posts/1',\n  );\n  const [postTitle, setPostTitle] = useState('');\n  const [postBody, setPostBody] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const { loading, error, data, get, post, resetError } = useAxios({\n    baseURL: 'https://jsonplaceholder.typicode.com',\n  });\n\n  const handleGetRequest = async () => {\n    try {\n      await get(url.replace('https://jsonplaceholder.typicode.com', ''));\n      setSuccessMessage('GET request succeeded!');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error('Error in GET request:', err);\n    }\n  };\n\n  const handlePostRequest = async () => {\n    try {\n      await post('/posts', {\n        title: postTitle,\n        body: postBody,\n        userId: 1,\n      });\n      setSuccessMessage('POST request succeeded!');\n      setPostTitle('');\n      setPostBody('');\n      setTimeout(() => setSuccessMessage(''), 3000);\n    } catch (err) {\n      console.error('Error in POST request:', err);\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <Card>\n        <CardHeader>\n          <CardTitle>GET Request</CardTitle>\n          <CardDescription>Fetch data from an API endpoint</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid w-full gap-2\">\n            <Label htmlFor=\"url\">URL</Label>\n            <Input\n              id=\"url\"\n              value={url}\n              onChange={(e) => setUrl(e.target.value)}\n              placeholder=\"https://jsonplaceholder.typicode.com/posts/1\"\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button\n            onClick={handleGetRequest}\n            disabled={loading}\n            className=\"w-full\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Loading...\n              </>\n            ) : (\n              'Send GET Request'\n            )}\n          </Button>\n        </CardFooter>\n      </Card>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>POST Request</CardTitle>\n          <CardDescription>Send data to an API endpoint</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid w-full gap-2\">\n            <Label htmlFor=\"title\">Title</Label>\n            <Input\n              id=\"title\"\n              value={postTitle}\n              onChange={(e) => setPostTitle(e.target.value)}\n              placeholder=\"Post title\"\n            />\n          </div>\n          <div className=\"grid w-full gap-2\">\n            <Label htmlFor=\"body\">Body</Label>\n            <Input\n              id=\"body\"\n              value={postBody}\n              onChange={(e) => setPostBody(e.target.value)}\n              placeholder=\"Post body\"\n            />\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button\n            onClick={handlePostRequest}\n            disabled={loading}\n            className=\"w-full\"\n          >\n            {loading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Loading...\n              </>\n            ) : (\n              'Send POST Request'\n            )}\n          </Button>\n        </CardFooter>\n      </Card>\n\n      {error && (\n        <Alert variant=\"destructive\">\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertTitle>Error</AlertTitle>\n          <AlertDescription>\n            {error.message}\n            <Button\n              variant=\"link\"\n              onClick={resetError}\n              className=\"p-0 h-auto font-normal ml-2\"\n            >\n              Dismiss\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {successMessage && (\n        <Alert className=\"bg-green-50 border-green-600 text-green-800\">\n          <CheckCircle2 className=\"h-4 w-4 text-green-600\" />\n          <AlertTitle>Success</AlertTitle>\n          <AlertDescription>{successMessage}</AlertDescription>\n        </Alert>\n      )}\n\n      {data && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Response Data</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <pre className=\"bg-slate-100 p-4 rounded-md overflow-auto max-h-60\">\n              {JSON.stringify(data, null, 2)}\n            </pre>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/use-axios-demo.tsx"
    }
  ]
}
