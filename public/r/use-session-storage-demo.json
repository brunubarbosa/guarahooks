{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "use-session-storage-demo",
  "type": "registry:example",
  "title": "UseSessionStorageDemo",
  "description": "use-session-storage's hook in action.",
  "registryDependencies": ["https://h3-use.com/r/use-session-storage.json"],
  "files": [
    {
      "path": "registry/example/use-session-storage-demo.tsx",
      "content": "import React, { useState } from 'react';\n\nimport useSessionStorage from '../hooks/use-session-storage';\n\n// Custom serializer/deserializer for an object\nconst userSerializer = (user: { name: string; age: number }) =>\n  JSON.stringify(user);\nconst userDeserializer = (str: string) => {\n  try {\n    return JSON.parse(str) as { name: string; age: number };\n  } catch {\n    return { name: '', age: 0 };\n  }\n};\n\nexport default function UseSessionStorageDemo() {\n  // Simple string example\n  const [name, setName] = useSessionStorage<string>('demo-name', '');\n\n  // Object example with custom serializer/deserializer\n  const [user, setUser] = useSessionStorage<{ name: string; age: number }>(\n    'demo-user',\n    { name: '', age: 0 },\n    { serialize: userSerializer, deserialize: userDeserializer },\n  );\n\n  const [ageInput, setAgeInput] = useState('');\n\n  return (\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded-lg shadow-md space-y-8\">\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">\n        useSessionStorage Demo\n      </h2>\n\n      {/* Simple string example */}\n      <div className=\"space-y-2\">\n        <label className=\"block text-gray-700 font-medium\">\n          Name (string):\n        </label>\n        <input\n          className=\"w-full px-3 py-2 border rounded focus:outline-none focus:ring focus:border-blue-300\"\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Type your name...\"\n        />\n        <div className=\"text-gray-600\">\n          Current value:{' '}\n          <span className=\"font-mono\">{JSON.stringify(name)}</span>\n        </div>\n        <button\n          className=\"mt-1 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\n          onClick={() => setName('')}\n        >\n          Clear Name\n        </button>\n      </div>\n\n      <hr />\n\n      {/* Object example */}\n      <div className=\"space-y-2\">\n        <label className=\"block text-gray-700 font-medium\">\n          User (object):\n        </label>\n        <input\n          className=\"w-full px-3 py-2 border rounded focus:outline-none focus:ring focus:border-blue-300 mb-2\"\n          type=\"text\"\n          value={user.name}\n          onChange={(e) => setUser({ ...user, name: e.target.value })}\n          placeholder=\"User name...\"\n        />\n        <input\n          className=\"w-full px-3 py-2 border rounded focus:outline-none focus:ring focus:border-blue-300\"\n          type=\"number\"\n          value={ageInput}\n          onChange={(e) => setAgeInput(e.target.value)}\n          placeholder=\"User age...\"\n        />\n        <button\n          className=\"mt-1 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 mr-2\"\n          onClick={() => {\n            const age = parseInt(ageInput, 10);\n            if (!isNaN(age)) setUser({ ...user, age });\n          }}\n        >\n          Set Age\n        </button>\n        <button\n          className=\"mt-1 px-3 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\n          onClick={() => setUser({ name: '', age: 0 })}\n        >\n          Clear User\n        </button>\n        <div className=\"text-gray-600 mt-2\">\n          Current value:{' '}\n          <span className=\"font-mono\">{JSON.stringify(user)}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:example",
      "target": "components/example/use-session-storage-demo.tsx"
    }
  ]
}
